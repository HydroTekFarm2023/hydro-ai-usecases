Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins4894196131976734483.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected '
CI selected 
+ echo 'CD selected fungal-training-automation'
CD selected fungal-training-automation
+ echo 'Tag selected v1'
Tag selected v1
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=v1
+ SELECTED_APP_CI_ARRAY=
+ SELECTED_APP_CD_ARRAY=fungal-training-automation
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v ]]
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z '' ']'
+ echo 'No project was selected for integration'
No project was selected for integration
+ '[' -z fungal-training-automation ']'
+ mainCD
+ echo 'MAIN CD'
MAIN CD
+ a=(${SELECTED_APP_CD_ARRAY[0]})
+ echo fungal-training-automation
fungal-training-automation
+ '[' fungal-training-automation == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=fungal-training-automation
+ temp=fungal-training-automation
+ echo fungal-training-automation
fungal-training-automation
+ i=fungal-training-automation
+ case "$i" in
+ echo fungal-training-automation
fungal-training-automation
+ SELECTED_APP_CI=HydroTek-22-FungalDetection/training-automation/training
+ DEPLOYMENT=fungaltrainingautomation
+ NAMESPACE=dev
+ CONTAINERNAME=fungaltrainingautomation
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ genericCD HydroTek-22-FungalDetection/training-automation/training fungaltrainingautomation dev fungaltrainingautomation gcr.io/hydrotek-286213 release 5001
+ SELECTED_APP_CD=HydroTek-22-FungalDetection/training-automation/training
+ DEPLOYMENT=fungaltrainingautomation
+ NAMESPACE=dev
+ CONTAINERNAME=fungaltrainingautomation
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=v1
+ PORTNUM=5001
+ echo 'GENERIC CD'
GENERIC CD
+ echo 'Begining Deployment of HydroTek-22-FungalDetection/training-automation/training'
Begining Deployment of HydroTek-22-FungalDetection/training-automation/training
+ kubectl get deployments fungaltrainingautomation --namespace dev
+ grep -q fungaltrainingautomation
+ echo 'Updating the deployment with latest version'
Updating the deployment with latest version
+ SELECTED_IMAGE=gcr.io/hydrotek-286213/fungaltrainingautomation:v1
+ echo 'Selected Image gcr.io/hydrotek-286213/fungaltrainingautomation:v1'
Selected Image gcr.io/hydrotek-286213/fungaltrainingautomation:v1
+ echo 'kubectl set image deployment/fungaltrainingautomation fungaltrainingautomation=gcr.io/hydrotek-286213/fungaltrainingautomation:v1 --namespace dev'
kubectl set image deployment/fungaltrainingautomation fungaltrainingautomation=gcr.io/hydrotek-286213/fungaltrainingautomation:v1 --namespace dev
+ kubectl set image deployment/fungaltrainingautomation fungaltrainingautomation=gcr.io/hydrotek-286213/fungaltrainingautomation:v1 --namespace dev
+ echo 'kubectl rollout restart deployment fungaltrainingautomation --namespace dev'
kubectl rollout restart deployment fungaltrainingautomation --namespace dev
+ kubectl rollout restart deployment fungaltrainingautomation --namespace dev
deployment.apps/fungaltrainingautomation restarted
+ echo /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'Updated Deployment'
Updated Deployment
+ echo 'kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/fungaltrainingautomation'
kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/fungaltrainingautomation
+ kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/fungaltrainingautomation
deployment.apps/fungaltrainingautomation env updated
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
Finished: SUCCESS
