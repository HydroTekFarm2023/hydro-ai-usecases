Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins7640817612281228732.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection'
CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection'
CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CD_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v ]]
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ mainCI
+ echo 'MAIN CI'
MAIN CI
+ a=(${SELECTED_APP_CI_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetection2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI Hydrotek-22-PestDetection/pest-detection/pest-detection Hydrotek-22-PestDetection/pest-detection/pest-detection hydro-ai-usecases pestdetection2022 ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetection2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'Docker Build gcr.io/hydrotek-286213/pestdetection2022:release '
Docker Build gcr.io/hydrotek-286213/pestdetection2022:release 
+ docker build -t gcr.io/hydrotek-286213/pestdetection2022:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:331bcacca11ec1a810405a3221329f38c8cd4486aa81097fb085547dc78a598a
#1 transferring dockerfile: 32B 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:112a80ffc22462e5c504d4619711de2f066d94f11d92ca6831ee90a80963a6db
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.8-slim
#3 sha256:a94c831f6b826f8ffd4325edd7e9f6408caa85fd7f03e2b107cc6a9d249f7065
#3 DONE 2.4s

#4 [1/8] FROM docker.io/library/python:3.8-slim@sha256:a2d8844be9a3d5df8cd64c11bba476156cbfe5991db643c83e88ae383c15b5d0
#4 sha256:aa5d501afa8b1f50883e7be789edf0be720596543936a431ad13e1c6b4c5ca02
#4 DONE 0.0s

#5 [internal] load build context
#5 sha256:fe5da86aa1fa40dcb4521b26bbbd6b5c1caa0684ef9ee6cff56fafe695f2cfe9
#5 transferring context: 8.24kB 0.0s done
#5 DONE 0.0s

#10 [6/8] RUN curl -sSL https://sdk.cloud.google.com | bash
#10 sha256:52f2ca5a18b1d49d75582b252aed0bb60fc60bdad301894c2a960d6ad03eadd1
#10 CACHED

#6 [2/8] COPY . /pest-detection
#6 sha256:cce4c35a8324abe0c7dad36b29ff7c76b04210076642b0231f602f3dcddb6ba0
#6 CACHED

#9 [5/8] RUN pip install -r requirements.txt
#9 sha256:ffd2e7379260f32e44ad5f95cf004513e8531c720b00f4af0d41884a81fe981d
#9 CACHED

#11 [7/8] COPY googleserviceAcc.json /root/googleserviceAcc.json
#11 sha256:4619f8c4108410a33dbc8e4729a31fb0a75e2c977c7fdba62a232607943a4df4
#11 CACHED

#7 [3/8] WORKDIR /pest-detection
#7 sha256:09b44723033a9931bfa470bfbb7f999b1045fa9fe5e4f75c3ce2e76d2e1ff070
#7 CACHED

#8 [4/8] RUN apt-get update     && DEBIAN_FRONTEND=noninteractive        apt-get -y --quiet --fix-missing install python3-opencv     && apt-get -y autoremove     && apt-get clean autoclean
#8 sha256:27d86c5985ce7c3339eed1ef1590c721efe1773e3f39368fd193f5386456c23e
#8 CACHED

#12 [8/8] COPY boto.txt /root/.boto
#12 sha256:173bbd241e64ba4cc54de6c03a2b12990aaade3cd4ffed6d6331bcc923c6f766
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:da9acc8f643161f9bcc3da1ea486cf96b69827103f9b43ce054388269490f443
#13 writing image sha256:da9acc8f643161f9bcc3da1ea486cf96b69827103f9b43ce054388269490f443 done
#13 naming to gcr.io/hydrotek-286213/pestdetection2022:release done
#13 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push gcr.io/hydrotek-286213/pestdetection2022:release'
Docker Push gcr.io/hydrotek-286213/pestdetection2022:release
+ docker push gcr.io/hydrotek-286213/pestdetection2022:release
The push refers to repository [gcr.io/hydrotek-286213/pestdetection2022]
2c50e68255ec: Preparing
339f039d8c1b: Preparing
4126850c8fd5: Preparing
e9e4b73543af: Preparing
6e4db41da58b: Preparing
5f70bf18a086: Preparing
a36089704484: Preparing
1871a119f8bb: Preparing
970738e564fc: Preparing
cd537c72df26: Preparing
7fce09c1d950: Preparing
1401df2b50d5: Preparing
a36089704484: Waiting
1871a119f8bb: Waiting
cd537c72df26: Waiting
970738e564fc: Waiting
1401df2b50d5: Waiting
7fce09c1d950: Waiting
5f70bf18a086: Waiting
4126850c8fd5: Pushed
339f039d8c1b: Pushed
2c50e68255ec: Pushed
5f70bf18a086: Layer already exists
970738e564fc: Layer already exists
1871a119f8bb: Layer already exists
cd537c72df26: Layer already exists
7fce09c1d950: Layer already exists
1401df2b50d5: Layer already exists
a36089704484: Pushed
6e4db41da58b: Pushed
e9e4b73543af: Pushed
release: digest: sha256:6cff7e891656bb62796873b1eaaab104234818f4bdea98daad711105262fbb8e size: 2836
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ mainCD
+ echo 'MAIN CD'
MAIN CD
+ a=(${SELECTED_APP_CD_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ DEPLOYMENT=pestdetection2022
+ NAMESPACE=dev
+ CONTAINERNAME=pestdetection2022
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ genericCD Hydrotek-22-PestDetection/pest-detection/pest-detection pestdetection2022 dev pestdetection2022 gcr.io/hydrotek-286213 release 5001
+ SELECTED_APP_CD=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ DEPLOYMENT=pestdetection2022
+ NAMESPACE=dev
+ CONTAINERNAME=pestdetection2022
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ echo 'GENERIC CD'
GENERIC CD
+ echo 'Begining Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ kubectl get deployments pestdetection2022 --namespace dev
+ grep -q pestdetection2022
+ echo 'Updating the deployment with latest version'
Updating the deployment with latest version
+ SELECTED_IMAGE=gcr.io/hydrotek-286213/pestdetection2022:release
+ echo 'Selected Image gcr.io/hydrotek-286213/pestdetection2022:release'
Selected Image gcr.io/hydrotek-286213/pestdetection2022:release
+ echo 'kubectl set image deployment/pestdetection2022 pestdetection2022=gcr.io/hydrotek-286213/pestdetection2022:release --namespace dev'
kubectl set image deployment/pestdetection2022 pestdetection2022=gcr.io/hydrotek-286213/pestdetection2022:release --namespace dev
+ kubectl set image deployment/pestdetection2022 pestdetection2022=gcr.io/hydrotek-286213/pestdetection2022:release --namespace dev
+ echo 'kubectl rollout restart deployment pestdetection2022 --namespace dev'
kubectl rollout restart deployment pestdetection2022 --namespace dev
+ kubectl rollout restart deployment pestdetection2022 --namespace dev
deployment.apps/pestdetection2022 restarted
+ echo 'Updated Deployment'
Updated Deployment
+ echo 'kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/pestdetection2022'
kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/pestdetection2022
+ kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/pestdetection2022
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
Finished: SUCCESS
