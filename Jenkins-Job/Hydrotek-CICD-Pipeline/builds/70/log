Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins1454026229141206090.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection'
CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection'
CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CD_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v ]]
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ mainCI
+ echo 'MAIN CI'
MAIN CI
+ a=(${SELECTED_APP_CI_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetect2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI Hydrotek-22-PestDetection/pest-detection/pest-detection Hydrotek-22-PestDetection/pest-detection/pest-detection hydro-ai-usecases pestdetect2022 ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetect2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'Docker Build gcr.io/hydrotek-286213/pestdetect2022:release '
Docker Build gcr.io/hydrotek-286213/pestdetect2022:release 
+ docker build -t gcr.io/hydrotek-286213/pestdetect2022:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:9e32facf16a75055eb2d92d48a70c00531f9ac50b274e096e8ed592e773d4c10
#1 transferring dockerfile: 656B 0.0s done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:83ec00f594b9b03566a943871bfbb6731e984e867ef57a3df8893f06d66dd696
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.8-slim
#3 sha256:a94c831f6b826f8ffd4325edd7e9f6408caa85fd7f03e2b107cc6a9d249f7065
#3 DONE 2.4s

#4 [1/8] FROM docker.io/library/python:3.8-slim@sha256:09919e06ecceca5cca99ab3622758b11f52abe7dcfc9bdb945d6bfe7482a0e82
#4 sha256:9a7e451acdc534477bfbac245184b5528132b8b08b5f60dc4d4716ac4133ae48
#4 DONE 0.0s

#5 [internal] load build context
#5 sha256:c806b66570aaea491131a5b60ee82520aa77351665b146870c50b26f079fbbc1
#5 transferring context: 30.83MB 0.7s done
#5 DONE 0.7s

#9 [5/8] RUN pip install -r requirements.txt
#9 sha256:e225c824e9654882a5d9360e61bad29b3a74563b379ad8da3e9d04d57cd4c711
#9 CACHED

#8 [4/8] RUN apt-get update     && DEBIAN_FRONTEND=noninteractive        apt-get -y --quiet --fix-missing install python3-opencv     && apt-get -y autoremove     && apt-get clean autoclean
#8 sha256:60b1c77a61c8ee2071e94a5572e3e29bbb8f5dc012c98f76bf8c8178dbd7baf6
#8 CACHED

#6 [2/8] COPY . /pest-detection
#6 sha256:54b71efaceac495f9966ddfaa21973c0c4958cb45dadcc7e4a81ce7e2300c528
#6 CACHED

#10 [6/8] RUN curl -sSL https://sdk.cloud.google.com | bash
#10 sha256:332f1c1b48c08f2f29da6c8de76b286534849cc27cab98164eaddb1f17926706
#10 CACHED

#11 [7/8] COPY googleserviceAcc.json /root/googleserviceAcc.json
#11 sha256:7efdf0de7b3b7b9edebbc7fb5c9baf7459d24390b672dcd1fa0ac343e30dce42
#11 CACHED

#7 [3/8] WORKDIR /pest-detection
#7 sha256:8e02389468e2351ec6bc16482e472b287660d462facf284d2239af81e5306819
#7 CACHED

#12 [8/8] COPY boto.txt /root/.boto
#12 sha256:95b2cee38d66caff3176566312c8821dbf8129ecdfe7a2e7e34b3b51d4a6da25
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:805e28cf0b3a1d73a5f04cac948a1bd2fe0941b16c7051aae270556d5979e7fb 0.0s done
#13 naming to gcr.io/hydrotek-286213/pestdetect2022:release done
#13 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push gcr.io/hydrotek-286213/pestdetect2022:release'
Docker Push gcr.io/hydrotek-286213/pestdetect2022:release
+ docker push gcr.io/hydrotek-286213/pestdetect2022:release
The push refers to repository [gcr.io/hydrotek-286213/pestdetect2022]
bb5f116a1e15: Preparing
53c0493404e7: Preparing
ce0862873d75: Preparing
bc2740cbead9: Preparing
c2af32394718: Preparing
5f70bf18a086: Preparing
6fc62e359331: Preparing
45f940692788: Preparing
566d397da0c7: Preparing
14adb77cbfd6: Preparing
2032d4408823: Preparing
3a626bb08c24: Preparing
6fc62e359331: Waiting
5f70bf18a086: Waiting
45f940692788: Waiting
566d397da0c7: Waiting
14adb77cbfd6: Waiting
2032d4408823: Waiting
3a626bb08c24: Waiting
ce0862873d75: Layer already exists
bb5f116a1e15: Layer already exists
c2af32394718: Layer already exists
53c0493404e7: Layer already exists
bc2740cbead9: Layer already exists
5f70bf18a086: Layer already exists
6fc62e359331: Layer already exists
45f940692788: Layer already exists
14adb77cbfd6: Layer already exists
566d397da0c7: Layer already exists
2032d4408823: Layer already exists
3a626bb08c24: Layer already exists
release: digest: sha256:669e741294ab04e53b86debc04a16d2a3e9254b2230e23d50166723d14b08790 size: 2836
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ mainCD
+ echo 'MAIN CD'
MAIN CD
+ a=(${SELECTED_APP_CD_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ DEPLOYMENT=pestdetect2022
+ NAMESPACE=dev
+ CONTAINERNAME=pestdetect2022
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ genericCD Hydrotek-22-PestDetection/pest-detection/pest-detection pestdetect2022 dev pestdetect2022 gcr.io/hydrotek-286213 release 5001
+ SELECTED_APP_CD=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ DEPLOYMENT=pestdetect2022
+ NAMESPACE=dev
+ CONTAINERNAME=pestdetect2022
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ echo 'GENERIC CD'
GENERIC CD
+ echo 'Begining Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ kubectl get deployments pestdetect2022 --namespace dev
+ grep -q pestdetect2022
+ echo 'Updating the deployment with latest version'
Updating the deployment with latest version
+ SELECTED_IMAGE=gcr.io/hydrotek-286213/pestdetect2022:release
+ echo 'Selected Image gcr.io/hydrotek-286213/pestdetect2022:release'
Selected Image gcr.io/hydrotek-286213/pestdetect2022:release
+ echo 'kubectl set image deployment/pestdetect2022 pestdetect2022=gcr.io/hydrotek-286213/pestdetect2022:release --namespace dev'
kubectl set image deployment/pestdetect2022 pestdetect2022=gcr.io/hydrotek-286213/pestdetect2022:release --namespace dev
+ kubectl set image deployment/pestdetect2022 pestdetect2022=gcr.io/hydrotek-286213/pestdetect2022:release --namespace dev
+ echo 'kubectl rollout restart deployment pestdetect2022 --namespace dev'
kubectl rollout restart deployment pestdetect2022 --namespace dev
+ kubectl rollout restart deployment pestdetect2022 --namespace dev
deployment.apps/pestdetect2022 restarted
+ echo 'Updated Deployment'
Updated Deployment
+ echo 'kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/pestdetect2022'
kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/pestdetect2022
+ kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/pestdetect2022
deployment.apps/pestdetect2022 env updated
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
Finished: SUCCESS
