Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins9685762557368426598.sh
+ BRANCH=master
+ IMAGE_TAG=release
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CD=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ continous_integration_server
+ echo 'Beginning Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Beginning Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'Docker Build'
Docker Build
+ docker build -t gcr.io/hydrotek-286213/pestdetection2022:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:5880d122df72343beaeba239c5cd02bc869f1e0ad4bd3035d67f2bda7f718086
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9d1b0d4ff3d8e87b348e12d8ef01675bb521b65c48d92822b75cc4dce0da54f9
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.8-slim
#3 sha256:a94c831f6b826f8ffd4325edd7e9f6408caa85fd7f03e2b107cc6a9d249f7065
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 sha256:1cc77d1134fe4ff68ab5b17d230878f0f1bf804b88a271e2d087d674b68bcb1f
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.8-slim
#3 sha256:a94c831f6b826f8ffd4325edd7e9f6408caa85fd7f03e2b107cc6a9d249f7065
#3 DONE 3.6s

#5 [1/8] FROM docker.io/library/python:3.8-slim@sha256:a43e1e26c4fbbe9b5d983533c094547d67f0325148f27dd85a0f8b7f0aced23e
#5 sha256:f1da7f2acee77f4e72252ff48c8d23a562a0004f34bea6972ad0fe9fe14786ad
#5 DONE 0.0s

#6 [internal] load build context
#6 sha256:3a4c1f7f651a380e1a031a7f569697759ae5f4711077cc8ea62941fdd248ea00
#6 transferring context: 334B done
#6 DONE 0.0s

#11 [6/8] RUN curl -sSL https://sdk.cloud.google.com | bash
#11 sha256:7cc56d540259441bd1e752907b8935f25cb10de33d084f0feb2395f50677b579
#11 CACHED

#10 [5/8] RUN pip install -r requirements.txt
#10 sha256:aef0302cb765f50f3257a5d017ac15b184c6ddb9ca0c8cab557b5580e8d6c451
#10 CACHED

#12 [7/8] COPY googleserviceAcc.json /root/googleserviceAcc.json
#12 sha256:d8b028eb54b1e052c2ff6bb27c42af0ddefa650c2726a709750bcca06e5e2b7b
#12 CACHED

#7 [2/8] COPY . /pest-detection
#7 sha256:a5228a83c17329b942d9ba3fbd17e9385ae454978a2969d79cb580b7e4112ce8
#7 CACHED

#8 [3/8] WORKDIR /pest-detection
#8 sha256:79acce4f7c01210cdb05fc034e493511f8f46c3897b06ce80c9d4336ba98e2ee
#8 CACHED

#9 [4/8] RUN apt-get update     && DEBIAN_FRONTEND=noninteractive        apt-get -y --quiet --fix-missing install python3-opencv     && apt-get -y autoremove     && apt-get clean autoclean
#9 sha256:e7a7c6ef3a656583089b56bb08152a8baddecbf31d5a49ff6dabceab79525177
#9 CACHED

#13 [8/8] COPY boto.txt /root/.boto
#13 sha256:aeceff45ec7418f800ad79eb6f88bc4ac210c0c9c90d9fb9b20deb0c59e4491f
#13 CACHED

#14 exporting to image
#14 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#14 exporting layers done
#14 writing image sha256:78488df519c270e9afc3718cdccc09ed4b58763bc8bb111e3145aa90fcc780e3 done
#14 naming to gcr.io/hydrotek-286213/pestdetection2022:release done
#14 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push'
Docker Push
+ docker push gcr.io/hydrotek-286213/pestdetection2022:release
The push refers to repository [gcr.io/hydrotek-286213/pestdetection2022]
c337ff6b8012: Preparing
73a271b64fcf: Preparing
4dcd986bfff5: Preparing
5cd3ed298fbf: Preparing
884a19665a38: Preparing
5f70bf18a086: Preparing
f79b5b8c612d: Preparing
87ea2744abf2: Preparing
51f094ff7b94: Preparing
1a40cb2669f8: Preparing
32034715e5d4: Preparing
7d0ebbe3f5d2: Preparing
5f70bf18a086: Waiting
f79b5b8c612d: Waiting
87ea2744abf2: Waiting
32034715e5d4: Waiting
7d0ebbe3f5d2: Waiting
51f094ff7b94: Waiting
1a40cb2669f8: Waiting
73a271b64fcf: Pushed
c337ff6b8012: Pushed
4dcd986bfff5: Pushed
5f70bf18a086: Layer already exists
51f094ff7b94: Layer already exists
87ea2744abf2: Layer already exists
1a40cb2669f8: Layer already exists
32034715e5d4: Layer already exists
7d0ebbe3f5d2: Layer already exists
f79b5b8c612d: Pushed
884a19665a38: Pushed
5cd3ed298fbf: Pushed
release: digest: sha256:8b46066ce237aa3c546bdaebdfd85e604ec7c8d0b40a73d5c1409d27176bcc95 size: 2836
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ continous_deployment_server
+ echo 'Beginning Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Beginning Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection
Finished: SUCCESS
