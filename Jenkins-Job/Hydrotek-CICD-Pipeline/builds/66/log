Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins2562914194127192547.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp'
CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp
+ echo 'CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp'
CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp
+ SELECTED_APP_CD_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v ]]
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp ']'
+ mainCI
+ echo 'MAIN CI'
MAIN CI
+ a=(${SELECTED_APP_CI_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp
Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection,ControllerApp == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetect2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI Hydrotek-22-PestDetection/pest-detection/pest-detection Hydrotek-22-PestDetection/pest-detection/pest-detection hydro-ai-usecases pestdetect2022 ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetect2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'Docker Build gcr.io/hydrotek-286213/pestdetect2022:release '
Docker Build gcr.io/hydrotek-286213/pestdetect2022:release 
+ docker build -t gcr.io/hydrotek-286213/pestdetect2022:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:f631289f304f29bca020ef65a1cf7ce2b1599948fa1810556b078b3162a63903
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:06dfe67454d1d236d712aa45013218f897656cfc7d355a2e293d9fb9f0f6ceac
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.8-slim
#3 sha256:a94c831f6b826f8ffd4325edd7e9f6408caa85fd7f03e2b107cc6a9d249f7065
#3 DONE 1.1s

#4 [1/8] FROM docker.io/library/python:3.8-slim@sha256:09919e06ecceca5cca99ab3622758b11f52abe7dcfc9bdb945d6bfe7482a0e82
#4 sha256:9a7e451acdc534477bfbac245184b5528132b8b08b5f60dc4d4716ac4133ae48
#4 DONE 0.0s

#5 [internal] load build context
#5 sha256:f120a6c9f2cc5f0d6020c2bba9e23c8f681e7d73fb9985bdb0e925b395665ce5
#5 transferring context: 8.24kB 0.0s done
#5 DONE 0.0s

#11 [7/8] COPY googleserviceAcc.json /root/googleserviceAcc.json
#11 sha256:da7a33a62a7d8eccb912c51d9abcad03e7abcb0af86d9cd76fe42ca8d2d18279
#11 CACHED

#7 [3/8] WORKDIR /pest-detection
#7 sha256:6b66a58fa4752cbf0482b76f94a4afce350f7afe739f7b5a0dce3f81acd48d3a
#7 CACHED

#10 [6/8] RUN curl -sSL https://sdk.cloud.google.com | bash
#10 sha256:9f314d7b7d71d6e230153cb0baa298f8111dd03b86588e4274261d2073867dea
#10 CACHED

#9 [5/8] RUN pip install -r requirements.txt
#9 sha256:46809a1fca0f66e5e4d08e6906d3b918fd54faf233d6f148f8c4ef00e35a833f
#9 CACHED

#6 [2/8] COPY . /pest-detection
#6 sha256:63afe3c83d806b2aa678ae2443a17792f05222e9b6b72503353ec0a7ce0c4b90
#6 CACHED

#8 [4/8] RUN apt-get update     && DEBIAN_FRONTEND=noninteractive        apt-get -y --quiet --fix-missing install python3-opencv     && apt-get -y autoremove     && apt-get clean autoclean
#8 sha256:e667507b98501fda5375870510acf96d1d5d6282a26a8b7c89dde9b1e95d1a59
#8 CACHED

#12 [8/8] COPY boto.txt /root/.boto
#12 sha256:3ed5c4db871d598114bef5debff007048459fbdfba6e7b9b809b716f2d158b8d
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:805e28cf0b3a1d73a5f04cac948a1bd2fe0941b16c7051aae270556d5979e7fb done
#13 naming to gcr.io/hydrotek-286213/pestdetect2022:release done
#13 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push gcr.io/hydrotek-286213/pestdetect2022:release'
Docker Push gcr.io/hydrotek-286213/pestdetect2022:release
+ docker push gcr.io/hydrotek-286213/pestdetect2022:release
The push refers to repository [gcr.io/hydrotek-286213/pestdetect2022]
bb5f116a1e15: Preparing
53c0493404e7: Preparing
ce0862873d75: Preparing
bc2740cbead9: Preparing
c2af32394718: Preparing
5f70bf18a086: Preparing
6fc62e359331: Preparing
45f940692788: Preparing
566d397da0c7: Preparing
14adb77cbfd6: Preparing
2032d4408823: Preparing
3a626bb08c24: Preparing
6fc62e359331: Waiting
45f940692788: Waiting
566d397da0c7: Waiting
14adb77cbfd6: Waiting
2032d4408823: Waiting
3a626bb08c24: Waiting
5f70bf18a086: Waiting
ce0862873d75: Layer already exists
bb5f116a1e15: Layer already exists
bc2740cbead9: Layer already exists
c2af32394718: Layer already exists
53c0493404e7: Layer already exists
5f70bf18a086: Layer already exists
6fc62e359331: Layer already exists
45f940692788: Layer already exists
566d397da0c7: Layer already exists
14adb77cbfd6: Layer already exists
2032d4408823: Layer already exists
3a626bb08c24: Layer already exists
release: digest: sha256:669e741294ab04e53b86debc04a16d2a3e9254b2230e23d50166723d14b08790 size: 2836
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=ControllerApp
+ temp=ControllerApp
+ echo ControllerApp
ControllerApp
+ i=ControllerApp
+ case "$i" in
+ SELECTED_APP_CI=ControllerApp
+ CI_DIR=ControllerApp
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=controller
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI ControllerApp ControllerApp hydro-ai-usecases controller ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=ControllerApp
+ CI_DIR=ControllerApp
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=controller
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Begining Integration of ControllerApp'
Begining Integration of ControllerApp
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd ControllerApp
+ echo 'Docker Build gcr.io/hydrotek-286213/controller:release '
Docker Build gcr.io/hydrotek-286213/controller:release 
+ docker build -t gcr.io/hydrotek-286213/controller:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:8a521b1d7c33542868d127d59e720e3f0849ea12db76c6b87ab37d8c0d81c138
#1 transferring dockerfile: 2B done
#1 DONE 0.0s
failed to solve with frontend dockerfile.v0: failed to read dockerfile: open /var/lib/docker/tmp/buildkit-mount650786779/Dockerfile: no such file or directory
Build step 'Execute shell' marked build as failure
Finished: FAILURE
