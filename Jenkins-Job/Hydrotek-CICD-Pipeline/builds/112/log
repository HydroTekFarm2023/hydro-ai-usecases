Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins595067022522433441.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected '
CI selected 
+ echo 'CD selected '
CD selected 
+ echo 'Tag selected release'
Tag selected release
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=
+ SELECTED_APP_CD_ARRAY=
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ TEST_DIR=Postman-Tests
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'Dev Cloud'
Dev Cloud
+ ENVFILE=hydroTek-Dev-Cloud.postman_environment.json
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z '' ']'
+ echo 'No project was selected for integration'
No project was selected for integration
+ '[' -z '' ']'
+ echo 'No project was selected for deployment'
No project was selected for deployment
+ '[' -z pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification ']'
+ maintest
+ echo 'MAIN Test'
MAIN Test
+ a=(${SELECTED_APP_TEST_ARRAY[0]})
+ echo pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification
pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification
+ '[' pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=pest-detection
+ temp=pest-detection
+ echo pest-detection
pest-detection
+ i=pest-detection
+ case "$i" in
+ echo pest-detection
pest-detection
+ json_name=detect-collection.postman_collection.json
+ api=gcp-detect
+ generictest detect-collection.postman_collection.json gcp-detect
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-detect
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-detect
gcp-detect
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-detect
newman

detect-collection

→ gcp-detect
  POST http://35.193.229.177:5001/v1/pestdetection/predict?source=hydrotek-2022&imageName=t1.jpg&dest=hydrotek-2022 [200 OK, 446B, 6.3s]

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                0 │                0 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 6.4s                                      │
├───────────────────────────────────────────────────────────────┤
│ total data received: 299B (approx)                            │
├───────────────────────────────────────────────────────────────┤
│ average response time: 6.3s [min: 6.3s, max: 6.3s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=pest-training-automation
+ temp=pest-training-automation
+ echo pest-training-automation
pest-training-automation
+ i=pest-training-automation
+ case "$i" in
+ echo pest-training-automation
pest-training-automation
+ json_name=train-collection.postman_collection.json
+ api=gcp-pest-train
+ generictest train-collection.postman_collection.json gcp-pest-train
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=train-collection.postman_collection.json
+ TEST=gcp-pest-train
+ echo train-collection.postman_collection.json
train-collection.postman_collection.json
+ echo gcp-pest-train
gcp-pest-train
+ newman run train-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-pest-train
newman

train-collection

→ gcp-pest-train
  POST http://34.122.93.198:5001/v1/pesttraining/train?datasetName=PestsV2-Small&epochs=10&source_loc=hydrotek-2022&dest_loc=hydrotek-2022&from_scratch=0 [200 OK, 1.62kB, 1m 17.5s]

┌─────────────────────────┬────────────────────────┬────────────────────────┐
│                         │               executed │                 failed │
├─────────────────────────┼────────────────────────┼────────────────────────┤
│              iterations │                      1 │                      0 │
├─────────────────────────┼────────────────────────┼────────────────────────┤
│                requests │                      1 │                      0 │
├─────────────────────────┼────────────────────────┼────────────────────────┤
│            test-scripts │                      0 │                      0 │
├─────────────────────────┼────────────────────────┼────────────────────────┤
│      prerequest-scripts │                      0 │                      0 │
├─────────────────────────┼────────────────────────┼────────────────────────┤
│              assertions │                      0 │                      0 │
├─────────────────────────┴────────────────────────┴────────────────────────┤
│ total run duration: 1m 17.6s                                              │
├───────────────────────────────────────────────────────────────────────────┤
│ total data received: 1.47kB (approx)                                      │
├───────────────────────────────────────────────────────────────────────────┤
│ average response time: 1m 17.5s [min: 1m 17.5s, max: 1m 17.5s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=ThermalLeafDetection-New
+ temp=ThermalLeafDetection-New
+ echo ThermalLeafDetection-New
ThermalLeafDetection-New
+ i=ThermalLeafDetection-New
+ case "$i" in
+ echo ThermalLeafDetection-New
ThermalLeafDetection-New
+ json_name=detect-collection.postman_collection.json
+ api=gcp-thermal-analysis
+ generictest detect-collection.postman_collection.json gcp-thermal-analysis
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-thermal-analysis
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-thermal-analysis
gcp-thermal-analysis
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-thermal-analysis
newman

detect-collection

→ gcp-thermal-analysis
  GET http://130.211.203.66:6005/thermalanalysis?ImagePath=thermal_images/cropped_leaf.jpg&X=9&Y=10&Height=170&Width=201&Threshold=20&PlantType=new_testing_plant&apitype=devtest&CustomerDb=hydrotekaidb [200 OK, 407B, 6.4s]
  √  Status code is 200
  √  Schema is valid
  √  Values match

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                3 │                0 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 6.4s                                      │
├───────────────────────────────────────────────────────────────┤
│ total data received: 260B (approx)                            │
├───────────────────────────────────────────────────────────────┤
│ average response time: 6.4s [min: 6.4s, max: 6.4s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=plant-growth
+ temp=plant-growth
+ echo plant-growth
plant-growth
+ i=plant-growth
+ case "$i" in
+ echo plant-growth
plant-growth
+ json_name=detect-collection.postman_collection.json
+ api=gcp-plant-growth
+ generictest detect-collection.postman_collection.json gcp-plant-growth
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-plant-growth
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-plant-growth
gcp-plant-growth
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-plant-growth
newman

detect-collection

→ gcp-plant-growth
  GET http://35.226.53.51:6003/PlantGrowth?ImagePath=HeightAnalysis/NFTtest2.jpg&system=NFT&PlantId=1&apitype=devtest&CustomerDb=hydrotekaidb
 [200 OK, 215B, 4.6s]
  √  Status code is 200
  √  Schema is valid
  √  Values match

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                3 │                0 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 4.7s                                      │
├───────────────────────────────────────────────────────────────┤
│ total data received: 69B (approx)                             │
├───────────────────────────────────────────────────────────────┤
│ average response time: 4.6s [min: 4.6s, max: 4.6s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=ControllerApp
+ temp=ControllerApp
+ echo ControllerApp
ControllerApp
+ i=ControllerApp
+ case "$i" in
+ echo ControllerApp
ControllerApp
+ json_name=controller-requests.postman_collection.json
+ api=gcp-controller-detect
+ generictest controller-requests.postman_collection.json gcp-controller-detect
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=controller-requests.postman_collection.json
+ TEST=gcp-controller-detect
+ echo controller-requests.postman_collection.json
controller-requests.postman_collection.json
+ echo gcp-controller-detect
gcp-controller-detect
+ newman run controller-requests.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-controller-detect
newman

controller-requests

→ gcp-controller-detect
  GET http://34.135.3.234:3000/v1/pestdetect/ [200 OK, 774B, 15.2s]

┌─────────────────────────┬────────────────────┬───────────────────┐
│                         │           executed │            failed │
├─────────────────────────┼────────────────────┼───────────────────┤
│              iterations │                  1 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│                requests │                  1 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│            test-scripts │                  0 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│      prerequest-scripts │                  0 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│              assertions │                  0 │                 0 │
├─────────────────────────┴────────────────────┴───────────────────┤
│ total run duration: 15.3s                                        │
├──────────────────────────────────────────────────────────────────┤
│ total data received: 544B (approx)                               │
├──────────────────────────────────────────────────────────────────┤
│ average response time: 15.2s [min: 15.2s, max: 15.2s, s.d.: 0µs] │
└──────────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ json_name1=controller-requests.postman_collection.json
+ api1=gcp-controller-classify
+ generictest controller-requests.postman_collection.json gcp-controller-classify
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=controller-requests.postman_collection.json
+ TEST=gcp-controller-classify
+ echo controller-requests.postman_collection.json
controller-requests.postman_collection.json
+ echo gcp-controller-classify
gcp-controller-classify
+ newman run controller-requests.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-controller-classify
newman

controller-requests

→ gcp-controller-classify
  GET http://34.135.3.234:3000/v1/fungalclassify/ [200 OK, 539B, 14.5s]

┌─────────────────────────┬────────────────────┬───────────────────┐
│                         │           executed │            failed │
├─────────────────────────┼────────────────────┼───────────────────┤
│              iterations │                  1 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│                requests │                  1 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│            test-scripts │                  0 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│      prerequest-scripts │                  0 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│              assertions │                  0 │                 0 │
├─────────────────────────┴────────────────────┴───────────────────┤
│ total run duration: 14.5s                                        │
├──────────────────────────────────────────────────────────────────┤
│ total data received: 302B (approx)                               │
├──────────────────────────────────────────────────────────────────┤
│ average response time: 14.5s [min: 14.5s, max: 14.5s, s.d.: 0µs] │
└──────────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=dataset-scraping
+ temp=dataset-scraping
+ echo dataset-scraping
dataset-scraping
+ i=dataset-scraping
+ case "$i" in
+ echo dataset-scraping
dataset-scraping
+ json_name=dataset-scraping-requests.postman_collection.json
+ api=gcp-scraping
+ generictest dataset-scraping-requests.postman_collection.json gcp-scraping
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=dataset-scraping-requests.postman_collection.json
+ TEST=gcp-scraping
+ echo dataset-scraping-requests.postman_collection.json
dataset-scraping-requests.postman_collection.json
+ echo gcp-scraping
gcp-scraping
+ newman run dataset-scraping-requests.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-scraping
newman

dataset-scraping-requests

→ gcp-scraping
  POST http://35.222.255.77:5001/v1/scraping/dataset?plant=apple&destination=hydrotek-2022/fungal-datasets&classes=Anthracnose,Leaf drop,Powdery mildew,Septoria leaf spot,healthy plant&n=10 [200 OK, 160B, 2m 1.4s]

┌─────────────────────────┬───────────────────────┬──────────────────────┐
│                         │              executed │               failed │
├─────────────────────────┼───────────────────────┼──────────────────────┤
│              iterations │                     1 │                    0 │
├─────────────────────────┼───────────────────────┼──────────────────────┤
│                requests │                     1 │                    0 │
├─────────────────────────┼───────────────────────┼──────────────────────┤
│            test-scripts │                     0 │                    0 │
├─────────────────────────┼───────────────────────┼──────────────────────┤
│      prerequest-scripts │                     0 │                    0 │
├─────────────────────────┼───────────────────────┼──────────────────────┤
│              assertions │                     0 │                    0 │
├─────────────────────────┴───────────────────────┴──────────────────────┤
│ total run duration: 2m 1.5s                                            │
├────────────────────────────────────────────────────────────────────────┤
│ total data received: 7B (approx)                                       │
├────────────────────────────────────────────────────────────────────────┤
│ average response time: 2m 1.4s [min: 2m 1.4s, max: 2m 1.4s, s.d.: 0µs] │
└────────────────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=fungal-training-automation
+ temp=fungal-training-automation
+ echo fungal-training-automation
fungal-training-automation
+ i=fungal-training-automation
+ case "$i" in
+ echo fungal-training-automation
fungal-training-automation
+ json_name=train-collection.postman_collection.json
+ api=gcp-fungal-train
+ generictest train-collection.postman_collection.json gcp-fungal-train
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=train-collection.postman_collection.json
+ TEST=gcp-fungal-train
+ echo train-collection.postman_collection.json
train-collection.postman_collection.json
+ echo gcp-fungal-train
gcp-fungal-train
+ newman run train-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-fungal-train
newman

train-collection

→ gcp-fungal-train
  POST http://34.70.21.82:5001/v1/fungaltrainingautomation/train?datasetName=strawberry-fungal&epochs=1&source_loc=hydrotek-2022/fungal-datasets&dest_loc=hydrotek-2022/fungal-models&from_scratch=0&weight_loc=hydrotek-2022/fungal-models&model_name=strawberry-fungal-model [errored]
     read ECONNRESET

┌─────────────────────────┬──────────┬──────────┐
│                         │ executed │   failed │
├─────────────────────────┼──────────┼──────────┤
│              iterations │        1 │        0 │
├─────────────────────────┼──────────┼──────────┤
│                requests │        1 │        1 │
├─────────────────────────┼──────────┼──────────┤
│            test-scripts │        0 │        0 │
├─────────────────────────┼──────────┼──────────┤
│      prerequest-scripts │        0 │        0 │
├─────────────────────────┼──────────┼──────────┤
│              assertions │        0 │        0 │
├─────────────────────────┴──────────┴──────────┤
│ total run duration: 4h 31m 8.1s               │
├───────────────────────────────────────────────┤
│ total data received: 0B (approx)              │
└───────────────────────────────────────────────┘

  #  failure  detail                    
                                        
 1.  Error                              
              read ECONNRESET           
              at request                
              inside "gcp-fungal-train" 
Build step 'Execute shell' marked build as failure
Finished: FAILURE
