Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins14802686387641378621.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected ControllerApp'
CI selected ControllerApp
+ echo 'CD selected ControllerApp'
CD selected ControllerApp
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=ControllerApp
+ SELECTED_APP_CD_ARRAY=ControllerApp
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v ]]
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z ControllerApp ']'
+ mainCI
+ echo 'MAIN CI'
MAIN CI
+ a=(${SELECTED_APP_CI_ARRAY[0]})
+ echo ControllerApp
ControllerApp
+ '[' ControllerApp == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=ControllerApp
+ temp=ControllerApp
+ echo ControllerApp
ControllerApp
+ i=ControllerApp
+ case "$i" in
+ SELECTED_APP_CI=ControllerApp
+ CI_DIR=ControllerApp
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=controller
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI ControllerApp ControllerApp hydro-ai-usecases controller ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=ControllerApp
+ CI_DIR=ControllerApp
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=controller
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Begining Integration of ControllerApp'
Begining Integration of ControllerApp
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
From gitlab.com:hydrotek-ai-grp/hydro-ai-usecases
   210c7d1..f2824da  pestclassification-tcet -> origin/pestclassification-tcet
Updating 210c7d1..f2824da
Fast-forward
 ControllerApp/app/controller.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd ControllerApp
+ echo 'Docker Build gcr.io/hydrotek-286213/controller:release '
Docker Build gcr.io/hydrotek-286213/controller:release 
+ docker build -t gcr.io/hydrotek-286213/controller:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:180c7dc77220a0060c6a81b7c7fa221e037a49f76f11386f94218add7b03624a
#1 transferring dockerfile: 772B 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:104b582353f8c46b5f400f8bff8d70516c6e94c4bdc055ab7b673db58a163ae3
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:16
#3 sha256:fcebe6595ccabc9db4d2477733f2265fb18ca302607dd9a9e445f4ebdfd1189a
#3 DONE 2.4s

#4 [1/3] FROM docker.io/library/node:16@sha256:68e34cfcd8276ad531b12b3454af5c24cd028752dfccacce4e19efef6f7cdbe0
#4 sha256:5a6e7225f307eecc5191d4f2f0ebe64c8b3c5b59ba31a8d8acd752bac691bad4
#4 DONE 0.0s

#5 [internal] load build context
#5 sha256:eaa97ffe22d4bb6f710cf5878cb996341ccc80fcd0807b7b5686c6ca9ff7a58c
#5 transferring context: 118.62MB 2.6s
#5 transferring context: 138.72MB 3.0s done
#5 DONE 3.1s

#4 [1/3] FROM docker.io/library/node:16@sha256:68e34cfcd8276ad531b12b3454af5c24cd028752dfccacce4e19efef6f7cdbe0
#4 sha256:5a6e7225f307eecc5191d4f2f0ebe64c8b3c5b59ba31a8d8acd752bac691bad4
#4 CACHED

#6 [2/3] COPY . .
#6 sha256:bb20cba2507d553543f3be5cbe731a47993ec1f7bd6516a07a26bd6a2d451365
#6 DONE 2.2s

#7 [3/3] RUN npm i nodemon -g
#7 sha256:23aa15569854e9a729e501a6f19ae3a3740ba0ffc43c563e5d53b6d830ec7093
#7 5.406 
#7 5.406 added 116 packages, and audited 117 packages in 5s
#7 5.406 
#7 5.406 16 packages are looking for funding
#7 5.406   run `npm fund` for details
#7 5.407 
#7 5.407 found 0 vulnerabilities
#7 5.408 npm notice 
#7 5.408 npm notice New patch version of npm available! 8.5.0 -> 8.5.5
#7 5.408 npm notice Changelog: <https://github.com/npm/cli/releases/tag/v8.5.5>
#7 5.408 npm notice Run `npm install -g npm@8.5.5` to update!
#7 5.408 npm notice 
#7 DONE 5.5s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers
#8 exporting layers 1.6s done
#8 writing image sha256:e9fea7956cee84d403a91978ef54bdf5630adbc79090d3dfbd25c78ee7666a8a
#8 writing image sha256:e9fea7956cee84d403a91978ef54bdf5630adbc79090d3dfbd25c78ee7666a8a done
#8 naming to gcr.io/hydrotek-286213/controller:release done
#8 DONE 1.7s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push gcr.io/hydrotek-286213/controller:release'
Docker Push gcr.io/hydrotek-286213/controller:release
+ docker push gcr.io/hydrotek-286213/controller:release
The push refers to repository [gcr.io/hydrotek-286213/controller]
b1b1b032e5d8: Preparing
ac086ad24a77: Preparing
29b084c6c0fb: Preparing
c4c1c7e1b593: Preparing
ffa412e341ec: Preparing
609caaacd3c7: Preparing
19414f2bac52: Preparing
dfab2047e46f: Preparing
f467c8b30ad7: Preparing
3b197f32f66b: Preparing
3f65e6373268: Preparing
609caaacd3c7: Waiting
19414f2bac52: Waiting
dfab2047e46f: Waiting
f467c8b30ad7: Waiting
3b197f32f66b: Waiting
3f65e6373268: Waiting
c4c1c7e1b593: Layer already exists
29b084c6c0fb: Layer already exists
ffa412e341ec: Layer already exists
19414f2bac52: Layer already exists
609caaacd3c7: Layer already exists
dfab2047e46f: Layer already exists
f467c8b30ad7: Layer already exists
3f65e6373268: Layer already exists
3b197f32f66b: Layer already exists
b1b1b032e5d8: Pushed
ac086ad24a77: Pushed
release: digest: sha256:992a92b7f74f32e7fe04d3ec46240a3243e6b83c1a39305ea69626c94bb13b06 size: 2637
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ '[' -z ControllerApp ']'
+ mainCD
+ echo 'MAIN CD'
MAIN CD
+ a=(${SELECTED_APP_CD_ARRAY[0]})
+ echo ControllerApp
ControllerApp
+ '[' ControllerApp == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=ControllerApp
+ temp=ControllerApp
+ echo ControllerApp
ControllerApp
+ i=ControllerApp
+ case "$i" in
+ echo ControllerApp
ControllerApp
+ SELECTED_APP_CI=ControllerApp
+ DEPLOYMENT=controller
+ NAMESPACE=dev
+ CONTAINERNAME=controller
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=3000
+ genericCD ControllerApp controller dev controller gcr.io/hydrotek-286213 release 3000
+ SELECTED_APP_CD=ControllerApp
+ DEPLOYMENT=controller
+ NAMESPACE=dev
+ CONTAINERNAME=controller
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=3000
+ echo 'GENERIC CD'
GENERIC CD
+ echo 'Begining Deployment of ControllerApp'
Begining Deployment of ControllerApp
+ kubectl get deployments controller --namespace dev
+ grep -q controller
+ echo 'Updating the deployment with latest version'
Updating the deployment with latest version
+ SELECTED_IMAGE=gcr.io/hydrotek-286213/controller:release
+ echo 'Selected Image gcr.io/hydrotek-286213/controller:release'
Selected Image gcr.io/hydrotek-286213/controller:release
+ echo 'kubectl set image deployment/controller controller=gcr.io/hydrotek-286213/controller:release --namespace dev'
kubectl set image deployment/controller controller=gcr.io/hydrotek-286213/controller:release --namespace dev
+ kubectl set image deployment/controller controller=gcr.io/hydrotek-286213/controller:release --namespace dev
+ echo 'kubectl rollout restart deployment controller --namespace dev'
kubectl rollout restart deployment controller --namespace dev
+ kubectl rollout restart deployment controller --namespace dev
deployment.apps/controller restarted
+ echo 'Updated Deployment'
Updated Deployment
+ echo 'kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/controller'
kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/controller
+ kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/controller
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
Finished: SUCCESS
