Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins17195735391422033321.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected '
CI selected 
+ echo 'CD selected '
CD selected 
+ echo 'Tag selected v3'
Tag selected v3
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=v3
+ SELECTED_APP_CI_ARRAY=
+ SELECTED_APP_CD_ARRAY=
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ TEST_DIR=Postman-Tests
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'Dev Cloud'
Dev Cloud
+ ENVFILE=hydroTek-Dev-Cloud.postman_environment.json
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z '' ']'
+ echo 'No project was selected for integration'
No project was selected for integration
+ '[' -z '' ']'
+ echo 'No project was selected for deployment'
No project was selected for deployment
+ '[' -z pest-detection,ThermalLeafDetection-New,plant-growth,ControllerApp,fungal-classification ']'
+ maintest
+ echo 'MAIN Test'
MAIN Test
+ a=(${SELECTED_APP_TEST_ARRAY[0]})
+ echo pest-detection,ThermalLeafDetection-New,plant-growth,ControllerApp,fungal-classification
pest-detection,ThermalLeafDetection-New,plant-growth,ControllerApp,fungal-classification
+ '[' pest-detection,ThermalLeafDetection-New,plant-growth,ControllerApp,fungal-classification == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=pest-detection
+ temp=pest-detection
+ echo pest-detection
pest-detection
+ i=pest-detection
+ case "$i" in
+ echo pest-detection
pest-detection
+ json_name=detect-collection.postman_collection.json
+ api=gcp-detect
+ generictest detect-collection.postman_collection.json gcp-detect
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
From gitlab.com:hydrotek-ai-grp/hydro-ai-usecases
   ca85b966..901b5b94  pestclassification-tcet -> origin/pestclassification-tcet
Updating ca85b966..901b5b94
Fast-forward
 .../classification/detect_api.py                    |   8 ++++++++
 .../scraping/dataset-scraping/scraping_api.py       |   9 +++++++++
 .../training-automation/training/train_api.py       |   9 +++++++++
 .../pest-detection/pest-detection/detect_api.py     |  11 +++++++++++
 .../yolov5/__pycache__/hubconf.cpython-38.pyc       | Bin 4491 -> 4491 bytes
 .../models/__pycache__/__init__.cpython-38.pyc      | Bin 179 -> 262 bytes
 .../yolov5/models/__pycache__/common.cpython-38.pyc | Bin 28565 -> 28648 bytes
 .../models/__pycache__/experimental.cpython-38.pyc  | Bin 4917 -> 5036 bytes
 .../yolov5/models/__pycache__/yolo.cpython-38.pyc   | Bin 12690 -> 12773 bytes
 .../utils/__pycache__/__init__.cpython-38.pyc       | Bin 1069 -> 1152 bytes
 .../utils/__pycache__/augmentations.cpython-38.pyc  | Bin 9079 -> 9162 bytes
 .../utils/__pycache__/autoanchor.cpython-38.pyc     | Bin 6296 -> 6379 bytes
 .../utils/__pycache__/datasets.cpython-38.pyc       | Bin 35685 -> 35768 bytes
 .../utils/__pycache__/downloads.cpython-38.pyc      | Bin 4080 -> 4163 bytes
 .../yolov5/utils/__pycache__/general.cpython-38.pyc | Bin 30762 -> 30845 bytes
 .../yolov5/utils/__pycache__/metrics.cpython-38.pyc | Bin 11326 -> 11409 bytes
 .../yolov5/utils/__pycache__/plots.cpython-38.pyc   | Bin 18104 -> 18187 bytes
 .../utils/__pycache__/torch_utils.cpython-38.pyc    | Bin 11961 -> 12044 bytes
 .../training-automation/yolov5/yolov5/train_api.py  |   8 ++++++++
 ThermalLeafDetection-New/PlantCV_API_Final.py       |   6 ++++++
 plant-growth/src/apiflask.py                        |   9 +++++++++
 21 files changed, 60 insertions(+)
+ cd Postman-Tests
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-detect
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-detect
gcp-detect
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-detect
newman

detect-collection

→ gcp-detect
  POST http://35.193.229.177:5001/v1/pestdetection/predict?source=hydrotek-2022&imageName=t1.jpg&dest=hydrotek-2022 [200 OK, 449B, 7s]
  √  Status code is 200
  √  Schema is valid
  √  Detection-Test

┌─────────────────────────┬───────────────┬───────────────┐
│                         │      executed │        failed │
├─────────────────────────┼───────────────┼───────────────┤
│              iterations │             1 │             0 │
├─────────────────────────┼───────────────┼───────────────┤
│                requests │             1 │             0 │
├─────────────────────────┼───────────────┼───────────────┤
│            test-scripts │             1 │             0 │
├─────────────────────────┼───────────────┼───────────────┤
│      prerequest-scripts │             0 │             0 │
├─────────────────────────┼───────────────┼───────────────┤
│              assertions │             3 │             0 │
├─────────────────────────┴───────────────┴───────────────┤
│ total run duration: 7s                                  │
├─────────────────────────────────────────────────────────┤
│ total data received: 302B (approx)                      │
├─────────────────────────────────────────────────────────┤
│ average response time: 7s [min: 7s, max: 7s, s.d.: 0µs] │
└─────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=ThermalLeafDetection-New
+ temp=ThermalLeafDetection-New
+ echo ThermalLeafDetection-New
ThermalLeafDetection-New
+ i=ThermalLeafDetection-New
+ case "$i" in
+ echo ThermalLeafDetection-New
ThermalLeafDetection-New
+ json_name=detect-collection.postman_collection.json
+ api=gcp-thermal-analysis
+ generictest detect-collection.postman_collection.json gcp-thermal-analysis
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-thermal-analysis
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-thermal-analysis
gcp-thermal-analysis
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-thermal-analysis
newman

detect-collection

→ gcp-thermal-analysis
  GET http://35.226.53.51:6005/thermalanalysis?ImagePath=hydrotekai/thermal_images/cropped_leaf.jpg&X=9&Y=10&Height=170&Width=201&Threshold=20&PlantType=lettuce&apitype=devtest&CustomerDb=hydrotek [200 OK, 530B, 6.3s]
  √  Status code is 200
  √  Schema is valid
  √  Values match

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                3 │                0 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 6.4s                                      │
├───────────────────────────────────────────────────────────────┤
│ total data received: 383B (approx)                            │
├───────────────────────────────────────────────────────────────┤
│ average response time: 6.3s [min: 6.3s, max: 6.3s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=plant-growth
+ temp=plant-growth
+ echo plant-growth
plant-growth
+ i=plant-growth
+ case "$i" in
+ echo plant-growth
plant-growth
+ json_name=detect-collection.postman_collection.json
+ api=gcp-plant-growth
+ generictest detect-collection.postman_collection.json gcp-plant-growth
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-plant-growth
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-plant-growth
gcp-plant-growth
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-plant-growth
newman

detect-collection

→ gcp-plant-growth
  GET http://34.71.125.6:6003/PlantGrowth?ImagePath=hydrotekai/HeightAnalysis/NFTtest2.jpg&system=NFT&PlantId=1&apitype=devtest&CustomerDb=hydrotek [200 OK, 453B, 3.9s]
  √  Status code is 200
  √  Schema is valid
  √  Values match

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                3 │                0 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 4s                                        │
├───────────────────────────────────────────────────────────────┤
│ total data received: 306B (approx)                            │
├───────────────────────────────────────────────────────────────┤
│ average response time: 3.9s [min: 3.9s, max: 3.9s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=ControllerApp
+ temp=ControllerApp
+ echo ControllerApp
ControllerApp
+ i=ControllerApp
+ case "$i" in
+ echo ControllerApp
ControllerApp
+ json_name=controller-requests.postman_collection.json
+ api=gcp-controller-detect
+ generictest controller-requests.postman_collection.json gcp-controller-detect
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ COLLECTION=controller-requests.postman_collection.json
+ TEST=gcp-controller-detect
+ echo controller-requests.postman_collection.json
controller-requests.postman_collection.json
+ echo gcp-controller-detect
gcp-controller-detect
+ newman run controller-requests.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-controller-detect
newman

controller-requests

→ gcp-controller-detect
  GET http://34.135.3.234:3000/v1/pestdetect/ [errored]
     connect ETIMEDOUT 34.135.3.234:3000
  2. Status code is 200
  3⠄ JSONError in test-script

┌─────────────────────────┬──────────┬──────────┐
│                         │ executed │   failed │
├─────────────────────────┼──────────┼──────────┤
│              iterations │        1 │        0 │
├─────────────────────────┼──────────┼──────────┤
│                requests │        1 │        1 │
├─────────────────────────┼──────────┼──────────┤
│            test-scripts │        1 │        1 │
├─────────────────────────┼──────────┼──────────┤
│      prerequest-scripts │        0 │        0 │
├─────────────────────────┼──────────┼──────────┤
│              assertions │        1 │        1 │
├─────────────────────────┴──────────┴──────────┤
│ total run duration: 21.3s                     │
├───────────────────────────────────────────────┤
│ total data received: 0B (approx)              │
└───────────────────────────────────────────────┘

  #  failure         detail                                                          
                                                                                     
 1.  Error                                                                           
                     connect ETIMEDOUT 34.135.3.234:3000                             
                     at request                                                      
                     inside "gcp-controller-detect"                                  
                                                                                     
 2.  AssertionError  Status code is 200                                              
                     expected { Object (id, _details, ...) } to have property 'code' 
                     at assertion:0 in test-script                                   
                     inside "gcp-controller-detect"                                  
                                                                                     
 3.  JSONError                                                                       
                     Unexpected token u in JSON at position 0                        
                     at test-script                                                  
                     inside "gcp-controller-detect"                                  
Build step 'Execute shell' marked build as failure
Finished: FAILURE
