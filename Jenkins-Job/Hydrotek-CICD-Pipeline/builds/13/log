Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins5510460185440409832.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection'
CI selected Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection'
CD selected Hydrotek-22-PestDetection/pest-detection/pest-detection
+ BRANCH=master
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CD_ARRAY=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ mainCI
+ echo 'MAIN CI'
MAIN CI
+ a=(${SELECTED_APP_CI_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetection2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI Hydrotek-22-PestDetection/pest-detection/pest-detection Hydrotek-22-PestDetection/pest-detection/pest-detection hydro-ai-usecases pestdetection2022 ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ CI_DIR=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=pestdetection2022
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Integration of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo 'Docker Build gcr.io/hydrotek-286213/pestdetection2022:release '
Docker Build gcr.io/hydrotek-286213/pestdetection2022:release 
+ docker build -t gcr.io/hydrotek-286213/pestdetection2022:release .
#1 [internal] load build definition from Dockerfile
#1 sha256:fe503cac65864e49c4a31f88cd656d8e507ce1ca305f768bbd2598c6822cda1e
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:dc052a19cd5ddf75d1102f7d635cec879c7ec4ede5f5746d93f380ac9801e353
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.8-slim
#3 sha256:a94c831f6b826f8ffd4325edd7e9f6408caa85fd7f03e2b107cc6a9d249f7065
#3 DONE 12.1s

#4 [1/8] FROM docker.io/library/python:3.8-slim@sha256:a43e1e26c4fbbe9b5d983533c094547d67f0325148f27dd85a0f8b7f0aced23e
#4 sha256:f1da7f2acee77f4e72252ff48c8d23a562a0004f34bea6972ad0fe9fe14786ad
#4 DONE 0.0s

#5 [internal] load build context
#5 sha256:ba1b8bf529924ceda46e5e9f11ef331b19563f40182529070c8c97fc6c0f7d4c
#5 transferring context: 334B done
#5 DONE 0.0s

#6 [2/8] COPY . /pest-detection
#6 sha256:b69cb1f25fa4336d71644a09dfc39e2545f94a6e23198468ff0b38955f57a1d9
#6 CACHED

#9 [5/8] RUN pip install -r requirements.txt
#9 sha256:f4c3a8797c127b8bd55fc9315d155ebb15ee07630d36756887264ab04c023967
#9 CACHED

#10 [6/8] RUN curl -sSL https://sdk.cloud.google.com | bash
#10 sha256:06dac3971286010f494190906a972dfb9a9f6ac0676a7134afacc205c4b69c49
#10 CACHED

#11 [7/8] COPY googleserviceAcc.json /root/googleserviceAcc.json
#11 sha256:f404463ee74d6c925ce189c4c17d0a1f080418321c29c5330066bfd1aef7a6bf
#11 CACHED

#7 [3/8] WORKDIR /pest-detection
#7 sha256:de94435f448264934cf1b0502bee734cb8a62964a4bc22bc0daa0cb25d2d0ede
#7 CACHED

#8 [4/8] RUN apt-get update     && DEBIAN_FRONTEND=noninteractive        apt-get -y --quiet --fix-missing install python3-opencv     && apt-get -y autoremove     && apt-get clean autoclean
#8 sha256:7c7e3e26c40bd09a823c5523ffb911ade95399c1c536c8f687860b513d9da2e4
#8 CACHED

#12 [8/8] COPY boto.txt /root/.boto
#12 sha256:f84ed276b53130d431e91bc0590378198786fca77cafbf2fb77b626ce7e4bcaf
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:78488df519c270e9afc3718cdccc09ed4b58763bc8bb111e3145aa90fcc780e3 done
#13 naming to gcr.io/hydrotek-286213/pestdetection2022:release done
#13 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push gcr.io/hydrotek-286213/pestdetection2022:release'
Docker Push gcr.io/hydrotek-286213/pestdetection2022:release
+ docker push gcr.io/hydrotek-286213/pestdetection2022:release
The push refers to repository [gcr.io/hydrotek-286213/pestdetection2022]
c337ff6b8012: Preparing
73a271b64fcf: Preparing
4dcd986bfff5: Preparing
5cd3ed298fbf: Preparing
884a19665a38: Preparing
5f70bf18a086: Preparing
f79b5b8c612d: Preparing
87ea2744abf2: Preparing
51f094ff7b94: Preparing
1a40cb2669f8: Preparing
32034715e5d4: Preparing
7d0ebbe3f5d2: Preparing
f79b5b8c612d: Waiting
87ea2744abf2: Waiting
51f094ff7b94: Waiting
1a40cb2669f8: Waiting
32034715e5d4: Waiting
7d0ebbe3f5d2: Waiting
5f70bf18a086: Waiting
4dcd986bfff5: Layer already exists
73a271b64fcf: Layer already exists
c337ff6b8012: Layer already exists
884a19665a38: Layer already exists
5f70bf18a086: Layer already exists
51f094ff7b94: Layer already exists
f79b5b8c612d: Layer already exists
87ea2744abf2: Layer already exists
1a40cb2669f8: Layer already exists
32034715e5d4: Layer already exists
7d0ebbe3f5d2: Layer already exists
5cd3ed298fbf: Retrying in 5 seconds
5cd3ed298fbf: Retrying in 4 seconds
5cd3ed298fbf: Retrying in 3 seconds
5cd3ed298fbf: Retrying in 2 seconds
5cd3ed298fbf: Retrying in 1 second
5cd3ed298fbf: Retrying in 10 seconds
5cd3ed298fbf: Retrying in 9 seconds
5cd3ed298fbf: Retrying in 8 seconds
5cd3ed298fbf: Retrying in 7 seconds
5cd3ed298fbf: Retrying in 6 seconds
5cd3ed298fbf: Retrying in 5 seconds
5cd3ed298fbf: Retrying in 4 seconds
5cd3ed298fbf: Retrying in 3 seconds
5cd3ed298fbf: Retrying in 2 seconds
5cd3ed298fbf: Retrying in 1 second
5cd3ed298fbf: Pushed
release: digest: sha256:8b46066ce237aa3c546bdaebdfd85e604ec7c8d0b40a73d5c1409d27176bcc95 size: 2836
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ '[' -z Hydrotek-22-PestDetection/pest-detection/pest-detection ']'
+ mainCD
+ echo 'MAIN CD'
MAIN CD
+ a=(${SELECTED_APP_CD_ARRAY[0]})
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ '[' Hydrotek-22-PestDetection/pest-detection/pest-detection == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ temp=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ i=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ case "$i" in
+ echo Hydrotek-22-PestDetection/pest-detection/pest-detection
Hydrotek-22-PestDetection/pest-detection/pest-detection
+ SELECTED_APP_CI=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ CONTAINERNAME=pestdetection2022
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ genericCD Hydrotek-22-PestDetection/pest-detection/pest-detection hydrotekapp-deployment dev pestdetection2022 gcr.io/hydrotek-286213 release 5001
+ SELECTED_APP_CD=Hydrotek-22-PestDetection/pest-detection/pest-detection
+ DEPLOYMENT=hydrotekapp-deployment
+ NAMESPACE=dev
+ CONTAINERNAME=pestdetection2022
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=5001
+ echo 'GENERIC CD'
GENERIC CD
+ echo 'Begining Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection'
Begining Deployment of Hydrotek-22-PestDetection/pest-detection/pest-detection
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ kubectl get deployments hydrotekapp-deployment --namespace dev
+ grep -q hydrotekapp-deployment
+ echo 'Updating the deployment with latest version'
Updating the deployment with latest version
+ SELECTED_IMAGE=gcr.io/hydrotek-286213/pestdetection2022:release
+ echo 'Selected Image gcr.io/hydrotek-286213/pestdetection2022:release'
Selected Image gcr.io/hydrotek-286213/pestdetection2022:release
+ echo 'Kubectl Set image deployment/hydrotekapp-deployment hydroapiserver=gcr.io/hydrotek-286213/pestdetection2022:release --namespace dev'
Kubectl Set image deployment/hydrotekapp-deployment hydroapiserver=gcr.io/hydrotek-286213/pestdetection2022:release --namespace dev
+ kubectl set image deployment/hydrotekapp-deployment hydroapiserver=gcr.io/hydrotek-286213/pestdetection2022:release --namespace dev
deployment.apps/hydrotekapp-deployment image updated
+ echo 'Kubectl Rollout restart deployment hydrotekapp-deployment --namespace dev'
Kubectl Rollout restart deployment hydrotekapp-deployment --namespace dev
+ kubectl rollout restart deployment hydrotekapp-deployment --namespace dev
deployment.apps/hydrotekapp-deployment restarted
+ echo 'Updated Deployment'
Updated Deployment
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
Finished: SUCCESS
