Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins15582008024174708497.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected plant-growth'
CI selected plant-growth
+ echo 'CD selected plant-growth'
CD selected plant-growth
+ echo 'Tag selected v1'
Tag selected v1
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=v1
+ SELECTED_APP_CI_ARRAY=plant-growth
+ SELECTED_APP_CD_ARRAY=plant-growth
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ TEST_DIR=Postman-Tests
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'Dev Cloud'
Dev Cloud
+ ENVFILE=hydroTek-Dev-Cloud.postman_environment.json
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z plant-growth ']'
+ mainCI
+ echo 'MAIN CI'
MAIN CI
+ a=(${SELECTED_APP_CI_ARRAY[0]})
+ echo plant-growth
plant-growth
+ '[' plant-growth == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=plant-growth
+ temp=plant-growth
+ echo plant-growth
plant-growth
+ i=plant-growth
+ case "$i" in
+ SELECTED_APP_CI=plant-growth/src
+ CI_DIR=plant-growth
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=plant-growth
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ genericCI plant-growth/src plant-growth hydro-ai-usecases plant-growth ./hydrotek/cicdbuild/ gcr.io/hydrotek-286213 release
+ SELECTED_APP_CI=plant-growth/src
+ CI_DIR=plant-growth
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINERNAME=plant-growth
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=v1
+ echo 'GENERIC CI'
GENERIC CI
+ echo 'Beginning Integration of plant-growth/src'
Beginning Integration of plant-growth/src
+ mkdir -p ./hydrotek/cicdbuild/
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ git clone -b pestclassification-tcet git@gitlab.com:hydrotek-ai-grp/hydro-ai-usecases.git
Cloning into 'hydro-ai-usecases'...
Updating files:  11% (1529/13713)Updating files:  12% (1646/13713)Updating files:  13% (1783/13713)Updating files:  14% (1920/13713)Updating files:  15% (2057/13713)Updating files:  16% (2195/13713)Updating files:  17% (2332/13713)Updating files:  18% (2469/13713)Updating files:  19% (2606/13713)Updating files:  20% (2743/13713)Updating files:  20% (2844/13713)Updating files:  21% (2880/13713)Updating files:  22% (3017/13713)Updating files:  23% (3154/13713)Updating files:  24% (3292/13713)Updating files:  25% (3429/13713)Updating files:  26% (3566/13713)Updating files:  27% (3703/13713)Updating files:  28% (3840/13713)Updating files:  29% (3977/13713)Updating files:  30% (4114/13713)Updating files:  31% (4252/13713)Updating files:  31% (4316/13713)Updating files:  32% (4389/13713)Updating files:  33% (4526/13713)Updating files:  34% (4663/13713)Updating files:  35% (4800/13713)Updating files:  36% (4937/13713)Updating files:  37% (5074/13713)Updating files:  38% (5211/13713)Updating files:  39% (5349/13713)Updating files:  40% (5486/13713)Updating files:  41% (5623/13713)Updating files:  41% (5751/13713)Updating files:  42% (5760/13713)Updating files:  43% (5897/13713)Updating files:  44% (6034/13713)Updating files:  45% (6171/13713)Updating files:  46% (6308/13713)Updating files:  47% (6446/13713)Updating files:  48% (6583/13713)Updating files:  49% (6720/13713)Updating files:  50% (6857/13713)Updating files:  51% (6994/13713)Updating files:  52% (7131/13713)Updating files:  53% (7268/13713)Updating files:  53% (7361/13713)Updating files:  54% (7406/13713)Updating files:  55% (7543/13713)Updating files:  56% (7680/13713)Updating files:  57% (7817/13713)Updating files:  58% (7954/13713)Updating files:  59% (8091/13713)Updating files:  60% (8228/13713)Updating files:  61% (8365/13713)Updating files:  62% (8503/13713)Updating files:  63% (8640/13713)Updating files:  64% (8777/13713)Updating files:  65% (8914/13713)Updating files:  65% (8935/13713)Updating files:  66% (9051/13713)Updating files:  67% (9188/13713)Updating files:  68% (9325/13713)Updating files:  69% (9462/13713)Updating files:  70% (9600/13713)Updating files:  71% (9737/13713)Updating files:  72% (9874/13713)Updating files:  73% (10011/13713)Updating files:  74% (10148/13713)Updating files:  74% (10181/13713)Updating files:  75% (10285/13713)Updating files:  76% (10422/13713)Updating files:  77% (10560/13713)Updating files:  78% (10697/13713)Updating files:  79% (10834/13713)Updating files:  80% (10971/13713)Updating files:  81% (11108/13713)Updating files:  82% (11245/13713)Updating files:  83% (11382/13713)Updating files:  84% (11519/13713)Updating files:  85% (11657/13713)Updating files:  85% (11747/13713)Updating files:  86% (11794/13713)Updating files:  87% (11931/13713)Updating files:  88% (12068/13713)Updating files:  89% (12205/13713)Updating files:  90% (12342/13713)Updating files:  91% (12479/13713)Updating files:  92% (12616/13713)Updating files:  93% (12754/13713)Updating files:  94% (12891/13713)Updating files:  95% (13028/13713)Updating files:  96% (13165/13713)Updating files:  96% (13233/13713)Updating files:  96% (13263/13713)Updating files:  97% (13302/13713)Updating files:  98% (13439/13713)Updating files:  99% (13576/13713)Updating files:  99% (13604/13713)Updating files:  99% (13653/13713)Updating files:  99% (13691/13713)Updating files: 100% (13713/13713)Updating files: 100% (13713/13713), done.
+ cd hydro-ai-usecases
+ gcloud auth print-access-token
+ docker login -u oauth2accesstoken --password-stdin https://gcr.io
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Login Succeeded
+ cd plant-growth/src
+ echo 'Docker Build gcr.io/hydrotek-286213/plant-growth:v1 '
Docker Build gcr.io/hydrotek-286213/plant-growth:v1 
+ docker build -t gcr.io/hydrotek-286213/plant-growth:v1 .
#1 [internal] load build definition from Dockerfile
#1 sha256:0e544610ec35ff7f52b80a3c9649febef118389aef565d1692987faf4da7a144
#1 transferring dockerfile: 727B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a95d026d38efaeb374d6035ab9a062b74123c253f7d177b4ea6f2ef8b59fa521
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.7-slim
#3 sha256:576eff89510cc9dab877be3284ab0265a765bba7f64805aeb347711cab5ba2e4
#3 DONE 3.8s

#4 [ 1/20] FROM docker.io/library/python:3.7-slim@sha256:ce125c0b5b4014a3688244a26aa3cd6c82b38a2369db0ff902de18813cd06d36
#4 sha256:80b49f5170441667f8232c80fde03bc15deaeb58cbc2e58f0eb2a002d2b46b4e
#4 DONE 0.0s

#21 [internal] load build context
#21 sha256:652146f95004f5e44a0946c6142808e7710bad80b138af84eaf82f6e4ce4119e
#21 transferring context: 608.78kB 0.0s done
#21 DONE 0.0s

#13 [10/20] RUN pip install opencv-python
#13 sha256:5e1194103934015e45492a27136a3f11fc57203446297f115fefc1c78c773496
#13 CACHED

#14 [11/20] RUN pip install plantcv
#14 sha256:db2a23b5c82eaccef721ab55805911a9a86ad9b1151b946c5ee466434d12389f
#14 CACHED

#8 [ 5/20] RUN apt install -y libgl1-mesa-glx
#8 sha256:87a583e4524fc349faeaad504d41bc821676a8ac1cd9bb2b072c7e2a32d6ce23
#8 CACHED

#12 [ 9/20] RUN pip install scipy
#12 sha256:4ef3236ddfe2b77c16262dfca337fdb6d5f6c4586706ed392b4a39cea8e55e86
#12 CACHED

#6 [ 3/20] RUN apt-get update
#6 sha256:40bf1d00afd153761223b8f3aba34bd3994a15ad24958b54edc7b4750859dc09
#6 CACHED

#20 [17/20] RUN pip install dnspython
#20 sha256:7695975ebf6ee5a0c883878ba93b4196a490895ae2a343d565c91886afd2499c
#20 CACHED

#11 [ 8/20] RUN pip install numpy
#11 sha256:dbc91e9b3b21e738018676fe8fdc100fae7fa42d27b9164b8a7ef959967575b8
#11 CACHED

#19 [16/20] RUN pip install 'pymongo[srv]'
#19 sha256:750984c8bd1e4a20d55cc18d32e48e9a38834352c71c74fc823d347ca64a79da
#19 CACHED

#9 [ 6/20] RUN pip install datetime
#9 sha256:9e4172c2a704e3e29c163dda032576702a29c94a4897205acf615b7c1ca803a6
#9 CACHED

#10 [ 7/20] RUN pip install uuid
#10 sha256:6e3c20ac52dd40d22c9a671414f3731b0f901641bc9b6430636f5a3b5e46e105
#10 CACHED

#16 [13/20] RUN pip install flask
#16 sha256:ef563d4c05acc892f8944e64a09ff2073974e2a39a7cc213790a2706963ab31f
#16 CACHED

#22 [18/20] COPY boto-hydrotek.txt /root/.boto
#22 sha256:4ada932f80b58ff54b8f50bfc48f4a044c0413cd480bee7b54af134bd488ac8f
#22 CACHED

#18 [15/20] RUN pip install gsutil
#18 sha256:10810230d04174143d03305a48746ba64165b1505b2fa1af6ea55910b4985af0
#18 CACHED

#5 [ 2/20] WORKDIR /Plant_Growth
#5 sha256:ca65f5137fcd58084cd8921526c15f323c977558c42673e9f29f01372d93b1e0
#5 CACHED

#17 [14/20] RUN pip install flask_restful
#17 sha256:a8d716499d6bc28204a755894a2a725ca04e70a29a54d0e3e487b81a4fbfc7ec
#17 CACHED

#7 [ 4/20] RUN apt-get install -y libglib2.0-0
#7 sha256:555f32e3934043d5d7690df1ffd64c1b9ece3ecceded26cc991d54e384b62e0a
#7 CACHED

#15 [12/20] RUN pip install imutils
#15 sha256:5ee1129272ea9c0b7066a19cae3bcf3045490ee2e5e849eb13ed6605fabbf66b
#15 CACHED

#23 [19/20] COPY hydrotek-serviceAcc.json /root
#23 sha256:bf3e9495bda13eb0ed176f50e81d8ae1112e914b66120b55d61f85c4ba7610b6
#23 CACHED

#24 [20/20] COPY . /Plant_Growth
#24 sha256:b6f907ba3bb1a66bef26514850f19c807b8973ccfb4ed73c0a5d167ce595dd50
#24 DONE 0.0s

#25 exporting to image
#25 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#25 exporting layers 0.0s done
#25 writing image sha256:3d6fa623a8ee35f8b265f0e4eff489685c20f89ae1d7745792859643861478b8
#25 writing image sha256:3d6fa623a8ee35f8b265f0e4eff489685c20f89ae1d7745792859643861478b8 done
#25 naming to gcr.io/hydrotek-286213/plant-growth:v1 done
#25 DONE 0.1s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
+ echo 'Docker Push gcr.io/hydrotek-286213/plant-growth:v1'
Docker Push gcr.io/hydrotek-286213/plant-growth:v1
+ docker push gcr.io/hydrotek-286213/plant-growth:v1
The push refers to repository [gcr.io/hydrotek-286213/plant-growth]
9dcb8d9c883a: Preparing
a2c5b791acfb: Preparing
6b1cde6c8e4a: Preparing
66c5508dee1f: Preparing
cddb55b4c939: Preparing
85ca146d08fc: Preparing
b87242e7c6bc: Preparing
f16ab8a15e6f: Preparing
4f80a74e8100: Preparing
e28f4335b441: Preparing
769613c665b9: Preparing
eabee5fed1b5: Preparing
74cc9ba076f8: Preparing
46d27acf8897: Preparing
bcb61e2af31c: Preparing
30cecd21240e: Preparing
3899e46a8f45: Preparing
6a9de1f4f636: Preparing
0ab41d0c2b9d: Preparing
23082294d405: Preparing
de08555149f7: Preparing
b8a74ae2f7f6: Preparing
43140e0754dc: Preparing
608f3a074261: Preparing
bcb61e2af31c: Waiting
30cecd21240e: Waiting
85ca146d08fc: Waiting
b87242e7c6bc: Waiting
0ab41d0c2b9d: Waiting
23082294d405: Waiting
f16ab8a15e6f: Waiting
43140e0754dc: Waiting
4f80a74e8100: Waiting
de08555149f7: Waiting
608f3a074261: Waiting
3899e46a8f45: Waiting
b8a74ae2f7f6: Waiting
74cc9ba076f8: Waiting
e28f4335b441: Waiting
6a9de1f4f636: Waiting
46d27acf8897: Waiting
a2c5b791acfb: Layer already exists
cddb55b4c939: Layer already exists
66c5508dee1f: Layer already exists
6b1cde6c8e4a: Layer already exists
85ca146d08fc: Layer already exists
4f80a74e8100: Layer already exists
f16ab8a15e6f: Layer already exists
b87242e7c6bc: Layer already exists
e28f4335b441: Layer already exists
769613c665b9: Layer already exists
74cc9ba076f8: Layer already exists
eabee5fed1b5: Layer already exists
46d27acf8897: Layer already exists
bcb61e2af31c: Layer already exists
3899e46a8f45: Layer already exists
30cecd21240e: Layer already exists
6a9de1f4f636: Layer already exists
0ab41d0c2b9d: Layer already exists
de08555149f7: Layer already exists
23082294d405: Layer already exists
b8a74ae2f7f6: Layer already exists
43140e0754dc: Layer already exists
608f3a074261: Layer already exists
9dcb8d9c883a: Pushed
v1: digest: sha256:2f614898491f9e57391dcb19f146eb58b44e84fbcd8cf6edcf0234cc90c30735 size: 5370
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ '[' -z plant-growth ']'
+ mainCD
+ echo 'MAIN CD'
MAIN CD
+ a=(${SELECTED_APP_CD_ARRAY[0]})
+ echo plant-growth
plant-growth
+ '[' plant-growth == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=plant-growth
+ temp=plant-growth
+ echo plant-growth
plant-growth
+ i=plant-growth
+ case "$i" in
+ echo plant-growth
plant-growth
+ SELECTED_APP_CI=plant-growth/src
+ DEPLOYMENT=plant-growth
+ NAMESPACE=dev
+ CONTAINERNAME=plant-growth
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=release
+ PORTNUM=6003
+ genericCD plant-growth/src plant-growth dev plant-growth gcr.io/hydrotek-286213 release 6003
+ SELECTED_APP_CD=plant-growth/src
+ DEPLOYMENT=plant-growth
+ NAMESPACE=dev
+ CONTAINERNAME=plant-growth
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ IMAGE_TAG=v1
+ PORTNUM=6003
+ echo 'GENERIC CD'
GENERIC CD
+ echo 'Begining Deployment of plant-growth/src'
Begining Deployment of plant-growth/src
+ kubectl get deployments plant-growth --namespace dev
+ grep -q plant-growth
+ echo 'Updating the deployment with latest version'
Updating the deployment with latest version
+ SELECTED_IMAGE=gcr.io/hydrotek-286213/plant-growth:v1
+ echo 'Selected Image gcr.io/hydrotek-286213/plant-growth:v1'
Selected Image gcr.io/hydrotek-286213/plant-growth:v1
+ echo 'kubectl set image deployment/plant-growth plant-growth=gcr.io/hydrotek-286213/plant-growth:v1 --namespace dev'
kubectl set image deployment/plant-growth plant-growth=gcr.io/hydrotek-286213/plant-growth:v1 --namespace dev
+ kubectl set image deployment/plant-growth plant-growth=gcr.io/hydrotek-286213/plant-growth:v1 --namespace dev
+ echo 'kubectl rollout restart deployment plant-growth --namespace dev'
kubectl rollout restart deployment plant-growth --namespace dev
+ kubectl rollout restart deployment plant-growth --namespace dev
deployment.apps/plant-growth restarted
+ echo 'Updated Deployment'
Updated Deployment
+ echo 'kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/plant-growth'
kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/plant-growth
+ kubectl set env -n dev --from=secret/mongocredentialsdevcloud deployment/plant-growth
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ '[' -z '' ']'
+ echo 'No project was selected for testing'
No project was selected for testing
Finished: SUCCESS
