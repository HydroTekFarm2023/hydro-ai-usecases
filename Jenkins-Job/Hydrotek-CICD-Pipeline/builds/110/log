Started by user [8mha:////4CA5kL0r8XoTT3PdnVI1PoGEnxCwKlCoPhe73Uyy/FdkAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyBEgZu/dLi1CL9xLzSrEQAtdxjnMAAAAA=[0manuja somthankar
Running as SYSTEM
Building in workspace C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline
[Hydrotek-CICD-Pipeline] $ "C:\Program Files\Git\bin\sh.exe" -xe C:\Users\anuja\AppData\Local\Temp\jenkins11711601725992846301.sh
+ echo 'Hydrotek CICD'
Hydrotek CICD
+ echo 'CI selected '
CI selected 
+ echo 'CD selected '
CD selected 
+ echo 'Tag selected release'
Tag selected release
+ BRANCH=pestclassification-tcet
+ IMAGE_TAG=release
+ SELECTED_APP_CI_ARRAY=
+ SELECTED_APP_CD_ARRAY=
+ REPOSITORY_DIR=hydro-ai-usecases
+ CONTAINER_REGISTRY=gcr.io/hydrotek-286213
+ CI_WORK_DIR=./hydrotek/cicdbuild/
+ TEST_DIR=Postman-Tests
+ NAMESPACE=dev
+ NETWORKTYPE=LoadBalancer
+ PORTNUM=5000
+ DIR=/c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ echo 'CI/CD Pipeline Started'
CI/CD Pipeline Started
+ '[' -z devcloud ']'
+ setenv
+ echo devcloud
devcloud
+ [[ devcloud == \d\e\v\c\l\o\u\d ]]
+ echo 'Dev Cloud'
Dev Cloud
+ ENVFILE=hydroTek-Dev-Cloud.postman_environment.json
+ echo 'dev cloud'
dev cloud
+ gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project hydrotek-286213
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for autopilot-cluster-1.
+ echo 'Cluster Name: kt-ai-autopilot-cluster1'
Cluster Name: kt-ai-autopilot-cluster1
+ NETWORKTYPE=LoadBalancer
+ '[' -z '' ']'
+ echo 'No project was selected for integration'
No project was selected for integration
+ '[' -z '' ']'
+ echo 'No project was selected for deployment'
No project was selected for deployment
+ '[' -z pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification ']'
+ maintest
+ echo 'MAIN Test'
MAIN Test
+ cd ./hydrotek/cicdbuild/
+ '[' -d hydro-ai-usecases ']'
+ cd hydro-ai-usecases
+ git pull
Already up to date.
+ cd Postman-Tests
+ a=(${SELECTED_APP_TEST_ARRAY[0]})
+ echo pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification
pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification
+ '[' pest-detection,pest-training-automation,ThermalLeafDetection-New,plant-growth,ControllerApp,dataset-scraping,fungal-training-automation,fungal-classification == All ']'
+ IFS=', '
+ read -r -a arr
+ for i in "${arr[@]}"
+ temp=pest-detection
+ temp=pest-detection
+ echo pest-detection
pest-detection
+ i=pest-detection
+ case "$i" in
+ echo pest-detection
pest-detection
+ json_name=detect-collection.postman_collection.json
+ api=gcp-detect
+ generictest detect-collection.postman_collection.json gcp-detect
+ COLLECTION=detect-collection.postman_collection.json
+ TEST=gcp-detect
+ echo detect-collection.postman_collection.json
detect-collection.postman_collection.json
+ echo gcp-detect
gcp-detect
+ newman run detect-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-detect
newman

detect-collection

→ gcp-detect
  POST http://35.193.229.177:5001/v1/pestdetection/predict?source=hydrotek-2022&imageName=t1.jpg&dest=hydrotek-2022 [200 OK, 446B, 6.5s]

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                0 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                0 │                0 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 6.6s                                      │
├───────────────────────────────────────────────────────────────┤
│ total data received: 299B (approx)                            │
├───────────────────────────────────────────────────────────────┤
│ average response time: 6.5s [min: 6.5s, max: 6.5s, s.d.: 0µs] │
└───────────────────────────────────────────────────────────────┘
+ cd /c/ProgramData/Jenkins/.jenkins/workspace/Hydrotek-CICD-Pipeline
+ for i in "${arr[@]}"
+ temp=pest-training-automation
+ temp=pest-training-automation
+ echo pest-training-automation
pest-training-automation
+ i=pest-training-automation
+ case "$i" in
+ echo pest-training-automation
pest-training-automation
+ json_name=train-collection.postman_collection.json
+ api=gcp-pest-train
+ generictest train-collection.postman_collection.json gcp-pest-train
+ COLLECTION=train-collection.postman_collection.json
+ TEST=gcp-pest-train
+ echo train-collection.postman_collection.json
train-collection.postman_collection.json
+ echo gcp-pest-train
gcp-pest-train
+ newman run train-collection.postman_collection.json --environment hydroTek-Dev-Cloud.postman_environment.json --folder gcp-pest-train
error: could not load environment
  ENOENT: no such file or directory, open 'C:\ProgramData\Jenkins\.jenkins\workspace\Hydrotek-CICD-Pipeline\hydroTek-Dev-Cloud.postman_environment.json'

Build step 'Execute shell' marked build as failure
Finished: FAILURE
